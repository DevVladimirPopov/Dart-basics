void main() {
// ДЗ 2.1 вычисления НОД и НОК целых чисел.
  print("ДЗ ---->  № 2.1");
  print('-' * 50);

  int fst = 340;
  int sec = 33;

  num nod1 = nod(fst, sec);
  num nok1 = nok(fst, sec);

  print('1е число = $fst / 2е Число = $sec');
  print('Наибольший общий делитель НОД = $nod1');
  print('Наименьшее общее кратное НОК = $nok1');
  print('-' * 50);
// -----------------------------------------

// 2.2 Преобразования целых чисел из десятичной
// системы в двоичную и обратно.
  print("ДЗ ---->  № 2.2");
  print('-' * 50);

  int dig1 = 455;
  String str1 = "1111100111";

  var result1 = NumberToBinary(dig1);
  var result2 = binaryToNumber(str1);

  print("Число $dig1  == $result1 (2й системе)");
  print("Число $str1 == $result2 (10й системе)");

  print('-' * 50);
// -----------------------------------------

// 2.3 Реализуйте метод, который принимает строку слов, разделённых пробелами.
//Задача — найти в данной строке числа и вернуть коллекцию num этих чисел.
  print("ДЗ ---->  № 2.3");
  print('-' * 50);

  print('-' * 50);
// -----------------------------------------
}

// НОД — это наибольший общий делитель!
nod(int a, int b) {
  if (a % b == 0) {
    return b;
  }
  if (b % a == 0) {
    return a;
  }
  if (a > b) {
    return a % b;
  }
  if (b > a) {
    return b % a;
  }
}

//НОК — это наименьшее общее кратное.
nok(a, b) {
  int y = ((a * b) / nod(a, b)).round();
  return y;
}

// Преобразования целых чисел из десятичной системы в двоичную.
int binaryToNumber(digits) => int.parse(digits, radix: 2);

// Преобразования целых чисел из двоичной системы в десятичную.
String NumberToBinary(digits) => digits.toRadixString(2);
